apply plugin: 'com.android.application'

def ndkDir = android.ndkDirectory;
def thirdParty = "${ndkDir}/sources/third_party/"
def SFML_root = "${thirdParty}/sfml/"
def SFML_lib = "${SFML_root}/lib/"
def SFML_ext = "${SFML_root}/extlibs/lib/"
def EXT_LIB = "${thirdParty}/lib/"
def EXT_LIB64 = "${thirdParty}/lib64/"


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.flightgame.alexaut.flightgame"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -frtti -fexceptions"
                arguments "-DCMAKE_SYSTEM_NAME=Android",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_shared",
                        "-DBUILD_SHARED_LIBS=True",
                        "-DCMAKE_ANDROID_NDK=${ndkDir}",
                        "-Wno-dev"

                abiFilters 'armeabi-v7a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = [SFML_lib, SFML_ext, EXT_LIB, EXT_LIB64]
            assets.srcDir('../../assets')
        }
    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
